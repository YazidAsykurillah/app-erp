//PROJECT datatables
    public function getProjects(Request $request)
    {
        \DB::statement(\DB::raw('set @rownum=0'));
        \DB::statement(\DB::raw('set @cost_margin=0'));
        $projects = Project::with('purchase_order_customer', 'sales', 'purchase_order_customer.customer')->select([
            \DB::raw('@rownum  := @rownum  + 1 AS rownum'),
            \DB::raw('@cost_margin  := @cost_margin  AS cost_margin'),
            'projects.*',
        ])->get();

        $data_projects = Datatables::of($projects)
            ->editColumn('purchase_order_customer_id', function($projects){
                if(count($projects->purchase_order_customer)){
                    return $projects->purchase_order_customer->code;
                }
                return NULL;
            })
            ->editColumn('sales_id', function($projects){
                if(count($projects->sales)){
                    return $projects->sales->name;
                }
                return NULL;
            })
            ->addColumn('customer_id', function($projects){
                if(count($projects->purchase_order_customer)){
                    return $projects->purchase_order_customer->customer->name;
                }
                return NULL;
            })
            ->addColumn('purchase_order_customer_amount', function($projects){
                return $projects->purchase_order_customer ? number_format($projects->purchase_order_customer->amount, 2) : 0;
            })
            ->addColumn('invoiced', function($projects){
               
                $total_paid_invoice = $projects->paid_invoice_customer();
                $total_pending_invoice = $projects->pending_invoice_customer();
                $total_invoice_due = $projects->invoice_customer_due();
                
                $invoiced = "";
                //check if this project has PO Customer
                if($projects->purchase_order_customer){
                    $po_customer_amount = $projects->purchase_order_customer->amount;
                    $invoiced = round(($total_paid_invoice+$total_pending_invoice)/$po_customer_amount* 100, 2) .'&nbsp;%';
                }else{
                    $invoiced = 0;
                }
                
                return $invoiced;
            })
            ->addColumn('pending_invoice_customer_amount', function($projects){
                return $projects->pending_invoice_customer() ? number_format($projects->pending_invoice_customer(), 2) : 0 ;
            })
            ->addColumn('paid_invoice_customer_amount', function($projects){
                return $projects->paid_invoice_customer() ? number_format($projects->paid_invoice_customer(), 2) : 0;
            })
            /*->editColumn('cost_margin', function($projects){
                //return round($projects->cost_margin(), 2).' %';
                return round($projects->cost_margin(), 2).' %';
            })*/
            ->editColumn('created_at', function($projects){
                return $projects->created_at != NULL ? Carbon::parse($projects->created_at)->format('Y-m-d') : '';
            })
            ->addColumn('actions', function($projects){
                    $actions_html ='<a href="'.url('project/'.$projects->id.'').'" class="btn btn-primary btn-xs" title="Click to view the detail">';
                    $actions_html .=    '<i class="fa fa-external-link"></i>';
                    $actions_html .='</a>&nbsp;';
                    $actions_html .='<a href="'.url('project/'.$projects->id.'/edit').'" class="btn btn-success btn-xs" title="Click to edit this project">';
                    $actions_html .=    '<i class="fa fa-edit"></i>';
                    $actions_html .='</a>&nbsp;';
                    if(\Auth::user()->can('delete-project')){
                        $actions_html .='<button type="button" class="btn btn-danger btn-xs btn-delete-project" data-id="'.$projects->id.'" data-text="'.$projects->code.'">';
                        $actions_html .=    '<i class="fa fa-trash"></i>';
                        $actions_html .='</button>';
                    }
                    
                    return $actions_html;
            });
        
        

        if ($keyword = $request->get('search')['value']) {
            //$data_projects->filterColumn('rownum', 'whereRaw', '@rownum  + 1 like ?', ["%{$keyword}%"]);
            //$data_projects->filterColumn('cost_margin', 'whereRaw', '@cost_margin like ?', ["%{$keyword}%"]);
            $data_projects->filterColumn('rownum', 'whereRaw', '@rownum  + 1 like ?', ["%{$keyword}%"]);
            $data_projects->filterColumn('cost_margin', 'whereRaw', '@cost_margin like ?', ["%{$keyword}%"]);
        }

        return $data_projects->make(true);
    }
    //END PROJECT datatables